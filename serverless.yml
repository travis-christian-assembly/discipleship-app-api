# NOTE: update this with your service name
service: discipleship-app-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-1
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  lambdaPolicies:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  put_course:
    handler: put_course.main
    events:
      - http:
        path: courses
        method: post
        cors: true
        authorizer: aws_iam
  get_course:
    handler: get_course.main
    events:
      - http:
        path: courses/{id}
        method: get
        cors: true
        authorizer: aws_iam
  list_courses:
    handler: list_courses.main
    events:
      - http:
        path: courses
        method: get
        cors: true
        authorizer: aws_iam
